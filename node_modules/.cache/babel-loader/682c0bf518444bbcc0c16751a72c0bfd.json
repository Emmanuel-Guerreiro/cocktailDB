{"ast":null,"code":"//TODO: ver si implementar a traves de un hook por una cuestion de claridad\n//TODO: ver como formatear los ingredientes y sus cantidades en alguna estructura de datos\n//que los represente mejor\n//TODO: ver que hacer ante error en el fetch de la data\nconst buscaTragos = async (tipo, cadenaBuscar) => {\n  /* La funcion se encarga de realizar la busqueda de los datos en la api y formatearlos en un objeto\r\n  a traves de la funcion formatear tragos\r\n    **Parametros de la funcion: \r\n  * Tipo: sirve para saber si vamos a realizar una busqueda por nombre o por ID (los dos valores a esperar)\r\n  * CadenaBuscar: es el valor, ya sea id o nombre con el que se realiza el fetch */\n  try {\n    if (tipo.toLowerCase() === \"nombre\") {\n      const busqueda = cadenaBuscar === \"\" ? \"a\" : cadenaBuscar;\n      const tragos = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${busqueda.charAt(0)}`);\n    } else if (tipo.toLowerCase() === \"id\") {\n      const tragos = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=17222`);\n    } else {\n      console.log(\"Te equivocaste en el nombre del parametro tipo - Valores validos: Nombre | ID\");\n    }\n\n    const tragosJSON = await tragos.json();\n    const tragoFormateado = formatearTragos(tragosJSON.drinks);\n    return tragoFormateado;\n  } catch (error) {\n    console.log(\"No encontro nada\");\n  }\n};\n\nconst formatearTragos = arrayTragos => {\n  const arrayTragosFormato = arrayTragos.map(trago => {\n    return {\n      id: trago.idDrink,\n      nombre: trago.strDrink.toUpperCase(),\n      tipo: trago.strAlcoholic,\n      imagen: trago.strDrinkThumb,\n      instrucciones: trago.strInstructions\n    };\n  });\n  return arrayTragosFormato;\n};\n\nexport default buscaTragos;","map":{"version":3,"sources":["C:/Users/emman/Documents/codigos-varios/cocktailDB/src/funciones/buscarTragos.js"],"names":["buscaTragos","tipo","cadenaBuscar","toLowerCase","busqueda","tragos","fetch","charAt","console","log","tragosJSON","json","tragoFormateado","formatearTragos","drinks","error","arrayTragos","arrayTragosFormato","map","trago","id","idDrink","nombre","strDrink","toUpperCase","strAlcoholic","imagen","strDrinkThumb","instrucciones","strInstructions"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA,MAAMA,WAAW,GAAG,OAAOC,IAAP,EAAaC,YAAb,KAA8B;AAChD;AACF;AACA;AACA;AACA;AAEE,MAAI;AACF,QAAID,IAAI,CAACE,WAAL,OAAuB,QAA3B,EAAqC;AACnC,YAAMC,QAAQ,GAAGF,YAAY,KAAK,EAAjB,GAAsB,GAAtB,GAA4BA,YAA7C;AACA,YAAMG,MAAM,GAAG,MAAMC,KAAK,CACvB,4DAA2DF,QAAQ,CAACG,MAAT,CAC1D,CAD0D,CAE1D,EAHsB,CAA1B;AAKD,KAPD,MAOO,IAAIN,IAAI,CAACE,WAAL,OAAuB,IAA3B,EAAiC;AACtC,YAAME,MAAM,GAAG,MAAMC,KAAK,CACvB,gEADuB,CAA1B;AAGD,KAJM,MAIA;AACLE,MAAAA,OAAO,CAACC,GAAR,CACE,+EADF;AAGD;;AACD,UAAMC,UAAU,GAAG,MAAML,MAAM,CAACM,IAAP,EAAzB;AACA,UAAMC,eAAe,GAAGC,eAAe,CAACH,UAAU,CAACI,MAAZ,CAAvC;AACA,WAAOF,eAAP;AACD,GApBD,CAoBE,OAAOG,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,CA9BD;;AAgCA,MAAMI,eAAe,GAAIG,WAAD,IAAiB;AACvC,QAAMC,kBAAkB,GAAGD,WAAW,CAACE,GAAZ,CAAiBC,KAAD,IAAW;AACpD,WAAO;AACLC,MAAAA,EAAE,EAAED,KAAK,CAACE,OADL;AAELC,MAAAA,MAAM,EAAEH,KAAK,CAACI,QAAN,CAAeC,WAAf,EAFH;AAGLvB,MAAAA,IAAI,EAAEkB,KAAK,CAACM,YAHP;AAILC,MAAAA,MAAM,EAAEP,KAAK,CAACQ,aAJT;AAKLC,MAAAA,aAAa,EAAET,KAAK,CAACU;AALhB,KAAP;AAOD,GAR0B,CAA3B;AASA,SAAOZ,kBAAP;AACD,CAXD;;AAaA,eAAejB,WAAf","sourcesContent":["//TODO: ver si implementar a traves de un hook por una cuestion de claridad\r\n\r\n//TODO: ver como formatear los ingredientes y sus cantidades en alguna estructura de datos\r\n//que los represente mejor\r\n//TODO: ver que hacer ante error en el fetch de la data\r\n\r\nconst buscaTragos = async (tipo, cadenaBuscar) => {\r\n  /* La funcion se encarga de realizar la busqueda de los datos en la api y formatearlos en un objeto\r\n  a traves de la funcion formatear tragos\r\n\r\n  **Parametros de la funcion: \r\n  * Tipo: sirve para saber si vamos a realizar una busqueda por nombre o por ID (los dos valores a esperar)\r\n  * CadenaBuscar: es el valor, ya sea id o nombre con el que se realiza el fetch */\r\n  try {\r\n    if (tipo.toLowerCase() === \"nombre\") {\r\n      const busqueda = cadenaBuscar === \"\" ? \"a\" : cadenaBuscar;\r\n      const tragos = await fetch(\r\n        `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${busqueda.charAt(\r\n          0\r\n        )}`\r\n      );\r\n    } else if (tipo.toLowerCase() === \"id\") {\r\n      const tragos = await fetch(\r\n        `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=17222`\r\n      );\r\n    } else {\r\n      console.log(\r\n        \"Te equivocaste en el nombre del parametro tipo - Valores validos: Nombre | ID\"\r\n      );\r\n    }\r\n    const tragosJSON = await tragos.json();\r\n    const tragoFormateado = formatearTragos(tragosJSON.drinks);\r\n    return tragoFormateado;\r\n  } catch (error) {\r\n    console.log(\"No encontro nada\");\r\n  }\r\n};\r\n\r\nconst formatearTragos = (arrayTragos) => {\r\n  const arrayTragosFormato = arrayTragos.map((trago) => {\r\n    return {\r\n      id: trago.idDrink,\r\n      nombre: trago.strDrink.toUpperCase(),\r\n      tipo: trago.strAlcoholic,\r\n      imagen: trago.strDrinkThumb,\r\n      instrucciones: trago.strInstructions,\r\n    };\r\n  });\r\n  return arrayTragosFormato;\r\n};\r\n\r\nexport default buscaTragos;\r\n"]},"metadata":{},"sourceType":"module"}